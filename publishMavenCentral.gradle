apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
    from android.sourceSets.main.kotlin.srcDirs
}

artifacts {
    archives androidSourcesJar
}

group = PUBLISH_GROUP_ID
version = PUBLISH_VERSION

//ext["signing.keyId"] = ''
//ext["signing.password"] = ''
//ext["signing.secretKeyRingFile"] = ''
//ext["ossrhUsername"] = ''
//ext["ossrhPassword"] = ''
//
//File localPropertiesFile = project.rootProject.file('local.properties')
//if (localPropertiesFile.exists()) {
//    Properties properties = new Properties()
//    properties.load(new FileInputStream(localPropertiesFile))
//    properties.each { name, value ->
//        ext[name] = value
//    }
//} else {
ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
ext["signing.password"] = System.getenv('SIGNING_PASSWORD')
ext["signing.secretKeyRingFile"] = System.getenv('SIGNING_SECRET_KEY_RING_FILE')
ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')
ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')
//}

publishing {
    publications {
        release(MavenPublication) {
            groupId PUBLISH_GROUP_ID
            artifactId PUBLISH_ARTIFACT_ID
            version PUBLISH_VERSION

            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")

            artifact androidSourcesJar

            pom {
                name = PUBLISH_NAME
                description = PUBLISH_DESCRIPTION
                url = 'https://github.com/xsolla/store-android-sdk'
                organization {
                    name = 'Xsolla'
                    url = 'https://xsolla.com'
                }
                developers {
                    developer {
                        id = 'xsolla'
                        name = 'Xsolla SDK Team'
                        email = 'publisher-sdk@xsolla.com'
                    }
                }
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                scm {
                    connection = 'https://github.com/xsolla/store-android-sdk.git'
                    developerConnection = 'https://github.com/xsolla/store-android-sdk.git'
                    url = 'https://github.com/xsolla/store-android-sdk.git'
                }
                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    project.configurations.implementation.allDependencies.each {
                        if (it.name != 'unspecified') {
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
    }
    repositories {
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"

            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications
}